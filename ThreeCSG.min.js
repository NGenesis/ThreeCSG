"use strict";window.ThreeBSP=function(){var t,e=1e-5,r=0,i=1,o=2,n=3;return t=function(t){this.matrix=new THREE.Matrix4,this.create(t)},t.prototype.subtract=function(e){var r=this.tree.clone(),i=e.tree.clone();return r.invert(),r.clipTo(i),i.clipTo(r),i.invert(),i.clipTo(r),i.invert(),r.build(i.allPolygons()),r.invert(),r=new t(r),r.matrix=this.matrix,r},t.prototype.union=function(e){var r=this.tree.clone(),i=e.tree.clone();return r.clipTo(i),i.clipTo(r),i.invert(),i.clipTo(r),i.invert(),r.build(i.allPolygons()),r=new t(r),r.matrix=this.matrix,r},t.prototype.intersect=function(e){var r=this.tree.clone(),i=e.tree.clone();return r.invert(),i.clipTo(r),i.invert(),r.clipTo(i),i.clipTo(r),r.build(i.allPolygons()),r.invert(),r=new t(r),r.matrix=this.matrix,r},t.prototype.create=function(e){if(e instanceof THREE.Geometry)this.fromGeometry(e);else if(e instanceof THREE.BufferGeometry)this.fromBufferGeometry(e);else{if(!(e instanceof THREE.Mesh)){if(e instanceof t.Node)return this.tree=e,this;throw new Error("ThreeBSP: is unable to create a BSP for the given input")}this.fromMesh(e)}},t.prototype.fromMesh=function(t){var e=t.geometry;t.updateMatrix(),this.matrix=t.matrix.clone(),this.create(e)},t.prototype.toGeometry=function(){var t,e,r,i,o,n,s,l,h,a,c=(new THREE.Matrix4).getInverse(this.matrix),u=new THREE.Geometry,p=this.tree.allPolygons(),y=p.length,f={};for(t=0;t<y;t++)for(r=p[t],i=r.vertices.length,e=2;e<i;e++)a=[],l=r.vertices[0],a.push(new THREE.Vector2(l.uv.x,l.uv.y)),l=new THREE.Vector3(l.x,l.y,l.z),l.applyMatrix4(c),"undefined"!=typeof f[l.x+","+l.y+","+l.z]?o=f[l.x+","+l.y+","+l.z]:(u.vertices.push(l),o=f[l.x+","+l.y+","+l.z]=u.vertices.length-1),l=r.vertices[e-1],a.push(new THREE.Vector2(l.uv.x,l.uv.y)),l=new THREE.Vector3(l.x,l.y,l.z),l.applyMatrix4(c),"undefined"!=typeof f[l.x+","+l.y+","+l.z]?n=f[l.x+","+l.y+","+l.z]:(u.vertices.push(l),n=f[l.x+","+l.y+","+l.z]=u.vertices.length-1),l=r.vertices[e],a.push(new THREE.Vector2(l.uv.x,l.uv.y)),l=new THREE.Vector3(l.x,l.y,l.z),l.applyMatrix4(c),"undefined"!=typeof f[l.x+","+l.y+","+l.z]?s=f[l.x+","+l.y+","+l.z]:(u.vertices.push(l),s=f[l.x+","+l.y+","+l.z]=u.vertices.length-1),h=new THREE.Face3(o,n,s,new THREE.Vector3(r.normal.x,r.normal.y,r.normal.z)),u.faces.push(h),u.faceVertexUvs[0].push(a);return u},t.prototype.toBufferGeometry=function(){var t,e,r,i,o,n,s,l,h,a=(new THREE.Matrix4).getInverse(this.matrix),c=new THREE.BufferGeometry,u=[],p=[],y=[],f=[],x=this.tree.allPolygons(),v=x.length,d={},m=0;for(t=0;t<v;t++)for(r=x[t],i=r.vertices.length,e=2;e<i;e++)h=[],l=r.vertices[0],f.push(l.uv.x,l.uv.y),l=new THREE.Vector3(l.x,l.y,l.z),l.applyMatrix4(a),"undefined"!=typeof d[l.x+","+l.y+","+l.z]?o=d[l.x+","+l.y+","+l.z]:(p.push(l.x,l.y,l.z),o=m,y.push(r.normal.x,r.normal.y,r.normal.z),m++),l=r.vertices[e-1],f.push(l.uv.x,l.uv.y),l=new THREE.Vector3(l.x,l.y,l.z),l.applyMatrix4(a),"undefined"!=typeof d[l.x+","+l.y+","+l.z]?n=d[l.x+","+l.y+","+l.z]:(p.push(l.x,l.y,l.z),n=m,y.push(r.normal.x,r.normal.y,r.normal.z),m++),l=r.vertices[e],f.push(l.uv.x,l.uv.y),l=new THREE.Vector3(l.x,l.y,l.z),l.applyMatrix4(a),"undefined"!=typeof d[l.x+","+l.y+","+l.z]?s=d[l.x+","+l.y+","+l.z]:(p.push(l.x,l.y,l.z),s=m,y.push(r.normal.x,r.normal.y,r.normal.z),m++),u.push(o,n,s);return c.addAttribute("uv",new THREE.BufferAttribute(new Float32Array(f),2)),c.addAttribute("position",new THREE.BufferAttribute(new Float32Array(p),3)),c.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(y),3)),c.setIndex(new THREE.BufferAttribute(new Uint32Array(u),1)),c},t.prototype.toMesh=function(t){var e=this.toGeometry(),r=new THREE.Mesh(e,t);return r.position.setFromMatrixPosition(this.matrix),r.rotation.setFromRotationMatrix(this.matrix),r},t.prototype.fromGeometry=function(e){var r,i,o,n,s,l,h,a=[];for(r=0,i=e.faces.length;r<i;r++)o=e.faces[r],s=e.faceVertexUvs[0][r],h=new t.Polygon,n=e.vertices[o.a],l=s?new THREE.Vector2(s[0].x,s[0].y):null,n=new t.Vertex(n.x,n.y,n.z,o.vertexNormals[0],l),n.applyMatrix4(this.matrix),h.vertices.push(n),n=e.vertices[o.b],l=s?new THREE.Vector2(s[1].x,s[1].y):null,n=new t.Vertex(n.x,n.y,n.z,o.vertexNormals[1],l),n.applyMatrix4(this.matrix),h.vertices.push(n),n=e.vertices[o.c],l=s?new THREE.Vector2(s[2].x,s[2].y):null,n=new t.Vertex(n.x,n.y,n.z,o.vertexNormals[2],l),n.applyMatrix4(this.matrix),h.vertices.push(n),h.calculateProperties(),a.push(h);this.tree=new t.Node(a)},t.prototype.fromIndexedBufferGeometry=function(e){var r,i,o,n,s,l=e.index.array,h=e.attributes.position.array,a=e.attributes.normal?e.attributes.normal.array:null,c=e.attributes.uv?e.attributes.uv.array:null,u=[];for(r=0,i=l.length;r<i;r+=3)s=new t.Polygon,o=l[r],n=new t.Vertex(h[3*o],h[3*o+1],h[3*o+2],a?new THREE.Vector3(a[3*o],a[3*o+1],a[3*o+2]):null,c?new THREE.Vector2(c[2*o],c[2*o+1]):null),n.applyMatrix4(this.matrix),s.vertices.push(n),o=l[r+1],n=new t.Vertex(h[3*o],h[3*o+1],h[3*o+2],a?new THREE.Vector3(a[3*o],a[3*o+1],a[3*o+2]):null,c?new THREE.Vector2(c[2*o],c[2*o+1]):null),n.applyMatrix4(this.matrix),s.vertices.push(n),o=l[r+2],n=new t.Vertex(h[3*o],h[3*o+1],h[3*o+2],a?new THREE.Vector3(a[3*o],a[3*o+1],a[3*o+2]):null,c?new THREE.Vector2(c[2*o],c[2*o+1]):null),n.applyMatrix4(this.matrix),s.vertices.push(n),s.calculateProperties(),u.push(s);this.tree=new t.Node(u)},t.prototype.fromNonIndexedBufferGeometry=function(e){var r,i,o,n,s,l=e.attributes.position.array,h=e.attributes.normal?e.attributes.normal.array:null,a=e.attributes.uv?e.attributes.uv.array:null,c=[];for(r=0,i=0,o=l.length;r<o;r+=9)s=new t.Polygon,n=new t.Vertex(l[r],l[r+1],l[r+2],h?new THREE.Vector3(h[r],h[r+1],h[r+2]):null,a?new THREE.Vector2(a[i],a[i+1]):null),n.applyMatrix4(this.matrix),s.vertices.push(n),n=new t.Vertex(l[r+3],l[r+4],l[r+5],h?new THREE.Vector3(h[r+3],h[r+4],h[r+5]):null,a?new THREE.Vector2(a[i+2],a[i+3]):null),n.applyMatrix4(this.matrix),s.vertices.push(n),n=new t.Vertex(l[r+6],l[r+7],l[r+8],h?new THREE.Vector3(h[r+6],h[r+7],h[r+8]):null,a?new THREE.Vector2(a[i+4],a[i+5]):null),n.applyMatrix4(this.matrix),s.vertices.push(n),s.calculateProperties(),c.push(s),i+=6;this.tree=new t.Node(c)},t.prototype.fromBufferGeometry=function(t){null===t.index?this.fromNonIndexedBufferGeometry(t):this.fromIndexedBufferGeometry(t)},t.Polygon=function(t,e,r){t instanceof Array||(t=[]),this.vertices=t,t.length>0?this.calculateProperties():this.normal=this.w=void 0},t.Polygon.prototype.calculateProperties=function(){var t=this.vertices[0],e=this.vertices[1],r=this.vertices[2];return this.normal=e.clone().subtract(t).cross(r.clone().subtract(t)).normalize(),this.w=this.normal.clone().dot(t),this},t.Polygon.prototype.clone=function(){var e,r,i=new t.Polygon;for(e=0,r=this.vertices.length;e<r;e++)i.vertices.push(this.vertices[e].clone());return i.calculateProperties(),i},t.Polygon.prototype.flip=function(){var t,e=[];for(this.normal.multiplyScalar(-1),this.w*=-1,t=this.vertices.length-1;t>=0;t--)e.push(this.vertices[t]);return this.vertices=e,this},t.Polygon.prototype.classifyVertex=function(t){var n=this.normal.dot(t)-this.w;return n<-e?o:n>e?i:r},t.Polygon.prototype.classifySide=function(t){var e,s,l,h=0,a=0,c=t.vertices.length;for(e=0;e<c;e++)s=t.vertices[e],l=this.classifyVertex(s),l===i?h++:l===o&&a++;return h>0&&0===a?i:0===h&&a>0?o:0===h&&0===a?r:n},t.Polygon.prototype.splitPolygon=function(e,s,l,h,a){var c=this.classifySide(e);if(c===r)(this.normal.dot(e.normal)>0?s:l).push(e);else if(c===i)h.push(e);else if(c===o)a.push(e);else{var u,p,y,f,x,v,d,m,E,w=[],g=[];for(p=0,u=e.vertices.length;p<u;p++)y=(p+1)%u,v=e.vertices[p],d=e.vertices[y],f=this.classifyVertex(v),x=this.classifyVertex(d),f!=o&&w.push(v),f!=i&&g.push(v),(f|x)===n&&(m=(this.w-this.normal.dot(v))/this.normal.dot(d.clone().subtract(v)),E=v.interpolate(d,m),w.push(E),g.push(E));w.length>=3&&h.push(new t.Polygon(w).calculateProperties()),g.length>=3&&a.push(new t.Polygon(g).calculateProperties())}},t.Vertex=function(t,e,r,i,o){this.x=t,this.y=e,this.z=r,this.normal=i||new THREE.Vector3,this.uv=o||new THREE.Vector2},t.Vertex.prototype.clone=function(){return new t.Vertex(this.x,this.y,this.z,this.normal.clone(),this.uv.clone())},t.Vertex.prototype.add=function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this},t.Vertex.prototype.subtract=function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this},t.Vertex.prototype.multiplyScalar=function(t){return this.x*=t,this.y*=t,this.z*=t,this},t.Vertex.prototype.cross=function(t){var e=this.x,r=this.y,i=this.z;return this.x=r*t.z-i*t.y,this.y=i*t.x-e*t.z,this.z=e*t.y-r*t.x,this},t.Vertex.prototype.normalize=function(){var t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);return this.x/=t,this.y/=t,this.z/=t,this},t.Vertex.prototype.dot=function(t){return this.x*t.x+this.y*t.y+this.z*t.z},t.Vertex.prototype.lerp=function(t,e){return this.add(t.clone().subtract(this).multiplyScalar(e)),this.normal.add(t.normal.clone().sub(this.normal).multiplyScalar(e)),this.uv.add(t.uv.clone().sub(this.uv).multiplyScalar(e)),this},t.Vertex.prototype.interpolate=function(t,e){return this.clone().lerp(t,e)},t.Vertex.prototype.applyMatrix4=function(t){var e=this.x,r=this.y,i=this.z,o=t.elements,n=1/(o[3]*e+o[7]*r+o[11]*i+o[15]);return isFinite(n)?(this.x=(o[0]*e+o[4]*r+o[8]*i+o[12])*n,this.y=(o[1]*e+o[5]*r+o[9]*i+o[13])*n,this.z=(o[2]*e+o[6]*r+o[10]*i+o[14])*n):(this.x=0,this.y=0,this.z=0),this},t.Node=function(e){var r,i,o=[],n=[];if(this.polygons=[],this.front=this.back=void 0,e instanceof Array&&0!==e.length){for(this.divider=e[0].clone(),r=0,i=e.length;r<i;r++)this.divider.splitPolygon(e[r],this.polygons,this.polygons,o,n);o.length>0&&(this.front=new t.Node(o)),n.length>0&&(this.back=new t.Node(n))}},t.Node.isConvex=function(t){var e,r;for(e=0;e<t.length;e++)for(r=0;r<t.length;r++)if(e!==r&&t[e].classifySide(t[r])!==o)return!1;return!0},t.Node.prototype.build=function(e){var r,i,o=[],n=[];for(this.divider||(this.divider=e[0].clone()),r=0,i=e.length;r<i;r++)this.divider.splitPolygon(e[r],this.polygons,this.polygons,o,n);o.length>0&&(this.front||(this.front=new t.Node),this.front.build(o)),n.length>0&&(this.back||(this.back=new t.Node),this.back.build(n))},t.Node.prototype.allPolygons=function(){var t=this.polygons.slice();return this.front&&(t=t.concat(this.front.allPolygons())),this.back&&(t=t.concat(this.back.allPolygons())),t},t.Node.prototype.clone=function(){var e=new t.Node;return e.divider=this.divider.clone(),e.polygons=this.polygons.map(function(t){return t.clone()}),e.front=this.front&&this.front.clone(),e.back=this.back&&this.back.clone(),e},t.Node.prototype.invert=function(){var t,e,r;for(t=0,e=this.polygons.length;t<e;t++)this.polygons[t].flip();return this.divider.flip(),this.front&&this.front.invert(),this.back&&this.back.invert(),r=this.front,this.front=this.back,this.back=r,this},t.Node.prototype.clipPolygons=function(t){var e,r,i,o;if(!this.divider)return t.slice();for(i=[],o=[],e=0,r=t.length;e<r;e++)this.divider.splitPolygon(t[e],i,o,i,o);return this.front&&(i=this.front.clipPolygons(i)),o=this.back?this.back.clipPolygons(o):[],i.concat(o)},t.Node.prototype.clipTo=function(t){this.polygons=t.clipPolygons(this.polygons),this.front&&this.front.clipTo(t),this.back&&this.back.clipTo(t)},t}();
//# sourceMappingURL=ThreeCSG.min.js.map